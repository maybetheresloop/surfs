// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package block

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StoreBlockRequest struct {
	Block                []byte   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreBlockRequest) Reset()         { *m = StoreBlockRequest{} }
func (m *StoreBlockRequest) String() string { return proto.CompactTextString(m) }
func (*StoreBlockRequest) ProtoMessage()    {}
func (*StoreBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *StoreBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreBlockRequest.Unmarshal(m, b)
}
func (m *StoreBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreBlockRequest.Marshal(b, m, deterministic)
}
func (m *StoreBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreBlockRequest.Merge(m, src)
}
func (m *StoreBlockRequest) XXX_Size() int {
	return xxx_messageInfo_StoreBlockRequest.Size(m)
}
func (m *StoreBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreBlockRequest proto.InternalMessageInfo

func (m *StoreBlockRequest) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *StoreBlockRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type StoreBlockResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreBlockResponse) Reset()         { *m = StoreBlockResponse{} }
func (m *StoreBlockResponse) String() string { return proto.CompactTextString(m) }
func (*StoreBlockResponse) ProtoMessage()    {}
func (*StoreBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *StoreBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreBlockResponse.Unmarshal(m, b)
}
func (m *StoreBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreBlockResponse.Marshal(b, m, deterministic)
}
func (m *StoreBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreBlockResponse.Merge(m, src)
}
func (m *StoreBlockResponse) XXX_Size() int {
	return xxx_messageInfo_StoreBlockResponse.Size(m)
}
func (m *StoreBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreBlockResponse proto.InternalMessageInfo

func (m *StoreBlockResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type HasBlockRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasBlockRequest) Reset()         { *m = HasBlockRequest{} }
func (m *HasBlockRequest) String() string { return proto.CompactTextString(m) }
func (*HasBlockRequest) ProtoMessage()    {}
func (*HasBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *HasBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasBlockRequest.Unmarshal(m, b)
}
func (m *HasBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasBlockRequest.Marshal(b, m, deterministic)
}
func (m *HasBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasBlockRequest.Merge(m, src)
}
func (m *HasBlockRequest) XXX_Size() int {
	return xxx_messageInfo_HasBlockRequest.Size(m)
}
func (m *HasBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasBlockRequest proto.InternalMessageInfo

func (m *HasBlockRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type HasBlockResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasBlockResponse) Reset()         { *m = HasBlockResponse{} }
func (m *HasBlockResponse) String() string { return proto.CompactTextString(m) }
func (*HasBlockResponse) ProtoMessage()    {}
func (*HasBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *HasBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasBlockResponse.Unmarshal(m, b)
}
func (m *HasBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasBlockResponse.Marshal(b, m, deterministic)
}
func (m *HasBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasBlockResponse.Merge(m, src)
}
func (m *HasBlockResponse) XXX_Size() int {
	return xxx_messageInfo_HasBlockResponse.Size(m)
}
func (m *HasBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasBlockResponse proto.InternalMessageInfo

func (m *HasBlockResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetBlockRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(m, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBlockResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Block                []byte   `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(m, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetBlockResponse) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*StoreBlockRequest)(nil), "block.StoreBlockRequest")
	proto.RegisterType((*StoreBlockResponse)(nil), "block.StoreBlockResponse")
	proto.RegisterType((*HasBlockRequest)(nil), "block.HasBlockRequest")
	proto.RegisterType((*HasBlockResponse)(nil), "block.HasBlockResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "block.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "block.GetBlockResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4d, 0xca, 0xc9, 0x4f, 0xce,
	0x56, 0xb2, 0xe5, 0x12, 0x0c, 0x2e, 0xc9, 0x2f, 0x4a, 0x75, 0x02, 0xf1, 0x82, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x20, 0xb2, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x10,
	0x8e, 0x90, 0x10, 0x17, 0x4b, 0x46, 0x62, 0x71, 0x86, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10,
	0x98, 0xad, 0xa4, 0xc7, 0x25, 0x84, 0xac, 0xbd, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x82,
	0x8b, 0xbd, 0xb8, 0x34, 0x39, 0x39, 0xb5, 0xb8, 0x18, 0x6c, 0x02, 0x47, 0x10, 0x8c, 0xab, 0xa4,
	0xca, 0xc5, 0xef, 0x91, 0x58, 0x8c, 0x62, 0x19, 0xcc, 0x58, 0x46, 0x24, 0x63, 0x75, 0xb8, 0x04,
	0x10, 0xca, 0x88, 0x31, 0xd4, 0x3d, 0xb5, 0x84, 0xa0, 0xa1, 0x4e, 0x5c, 0x02, 0x08, 0x65, 0x84,
	0x0c, 0x45, 0x84, 0x01, 0x13, 0x52, 0x18, 0x18, 0x1d, 0x61, 0xe4, 0x62, 0x05, 0x7b, 0x58, 0xc8,
	0x91, 0x8b, 0x0b, 0xe1, 0x73, 0x21, 0x09, 0x3d, 0xb0, 0xbc, 0x1e, 0x46, 0x58, 0x4a, 0x49, 0x62,
	0x91, 0x81, 0x5a, 0x6e, 0xcd, 0xc5, 0x01, 0xf3, 0xa5, 0x90, 0x18, 0x54, 0x19, 0x5a, 0xe8, 0x48,
	0x89, 0x63, 0x88, 0x23, 0x34, 0xc3, 0x7c, 0x03, 0xd7, 0x8c, 0x16, 0x0a, 0x70, 0xcd, 0xe8, 0xde,
	0x4e, 0x62, 0x03, 0xa7, 0x01, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0x9e, 0x51, 0x18,
	0x14, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoreClient is the client API for Store service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoreClient interface {
	StoreBlock(ctx context.Context, in *StoreBlockRequest, opts ...grpc.CallOption) (*StoreBlockResponse, error)
	HasBlock(ctx context.Context, in *HasBlockRequest, opts ...grpc.CallOption) (*HasBlockResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) StoreBlock(ctx context.Context, in *StoreBlockRequest, opts ...grpc.CallOption) (*StoreBlockResponse, error) {
	out := new(StoreBlockResponse)
	err := c.cc.Invoke(ctx, "/block.Store/StoreBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) HasBlock(ctx context.Context, in *HasBlockRequest, opts ...grpc.CallOption) (*HasBlockResponse, error) {
	out := new(HasBlockResponse)
	err := c.cc.Invoke(ctx, "/block.Store/HasBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/block.Store/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoreServer is the server API for Store service.
type StoreServer interface {
	StoreBlock(context.Context, *StoreBlockRequest) (*StoreBlockResponse, error)
	HasBlock(context.Context, *HasBlockRequest) (*HasBlockResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
}

// UnimplementedStoreServer can be embedded to have forward compatible implementations.
type UnimplementedStoreServer struct {
}

func (*UnimplementedStoreServer) StoreBlock(ctx context.Context, req *StoreBlockRequest) (*StoreBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreBlock not implemented")
}
func (*UnimplementedStoreServer) HasBlock(ctx context.Context, req *HasBlockRequest) (*HasBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HasBlock not implemented")
}
func (*UnimplementedStoreServer) GetBlock(ctx context.Context, req *GetBlockRequest) (*GetBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_StoreBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).StoreBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block.Store/StoreBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).StoreBlock(ctx, req.(*StoreBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_HasBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).HasBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block.Store/HasBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).HasBlock(ctx, req.(*HasBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block.Store/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "block.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreBlock",
			Handler:    _Store_StoreBlock_Handler,
		},
		{
			MethodName: "HasBlock",
			Handler:    _Store_HasBlock_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Store_GetBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
